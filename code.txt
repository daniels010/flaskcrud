#ESSE AQUI TO DEIXANDO A IMAGEM COMO OPCIONAL, VER COM A DUDA QUAL É PRA USAR DPS
#MAS ESSE AQUI FAZ MT MAIS SENTIDO

@app.route('/adicionar-produtos', methods=['GET', 'POST'])
def add_produto():
    form = ProdutoForm()

    if request.method == 'POST':
        print("Método POST chamado.")  # Debug
        if form.validate_on_submit():
            print("Formulário validado com sucesso.")  # Debug

            # Verifica se uma imagem foi enviada
            if 'imagem' in request.files:
                imagem = request.files['imagem']
                if imagem.filename != '':
                    nome_imagem = secure_filename(imagem.filename)
                    caminho_imagem = os.path.join(app.config['UPLOAD_FOLDER'], nome_imagem)

                    # Tenta salvar a imagem no caminho especificado
                    try:
                        imagem.save(caminho_imagem)
                        print(f"Imagem salva em {caminho_imagem}.")  # Debug
                    except Exception as e:
                        print(f"Erro ao salvar a imagem: {e}")
                        flash("Erro ao salvar a imagem. Tente novamente.", "danger")
                        return render_template('adicionar_produtos.html', form=form)

                    # Usar a imagem salva
                    imagem_produto = caminho_imagem
                else:
                    # Nenhuma imagem foi enviada, atribuir None
                    imagem_produto = None
                    print("Nenhuma imagem foi enviada.")  # Debug
            else:
                # A chave 'imagem' não está nos arquivos, atribuir None
                imagem_produto = None
                print("Nenhuma imagem foi enviada.")  # Debug

            # Cria o novo produto com o caminho da imagem
            new_produto = Produto(
                nome=form.nome.data,
                preco=form.preco.data,
                quantidade=form.quantidade.data,
                descricao=form.descricao.data,
                imagem=imagem_produto  # Atribuindo None se nenhuma imagem foi enviada
            )

            db.session.add(new_produto)
            try:
                db.session.commit()
                flash("Produto adicionado com sucesso!", "success")
                return render_template('adicionar_produtos.html', form=form)
            except IntegrityError as e:
                db.session.rollback()
                print(f"Erro ao adicionar produto: {e}")  # Debug
                flash("Erro ao adicionar produto. Verifique os dados e tente novamente.", "danger")
                return render_template('adicionar_produtos.html', form=form)
        else:
            print("Formulário inválido:", form.errors)  # Debug
            flash("Erro no formulário. Verifique os campos e tente novamente.", "danger")
            return render_template('adicionar_produtos.html', form=form)

    # Para GET, renderiza o template HTML do formulário
    return render_template('adicionar_produtos.html', form=form)



    >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    RETORNANDO FLASH COM AS FLAGS QUE VEM DIRETO DO FORMS

    flash(f"Erro no campo {field}: {error}", "error")